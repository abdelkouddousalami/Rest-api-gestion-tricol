<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/data/jpa
           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- Active le component scanning -->
    <context:component-scan base-package="com.youcode"/>
    
    <!-- Active les annotations de transaction -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- Active les repositories JPA -->
    <jpa:repositories base-package="com.youcode.repositories"/>
    
    <!-- Charge les propriétés -->
    <context:property-placeholder location="classpath:application.properties"/>

    <!-- Configuration du DataSource avec HikariCP -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="driverClassName" value="${db.driver}"/>
        <property name="maximumPoolSize" value="10"/>
        <property name="minimumIdle" value="5"/>
    </bean>

    <!-- Configuration de l'EntityManagerFactory -->
    <bean id="entityManagerFactory" 
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.youcode.entities"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
    </bean>

    <!-- Configuration du TransactionManager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Définition des beans avec différents scopes -->
    
    <!-- Singleton scope (par défaut) - une seule instance pour toute l'application -->
    <bean id="fournisseurService" 
          class="com.youcode.services.impl.FournisseurServiceImpl" 
          scope="singleton">
        <constructor-arg ref="fournisseurRepository"/>
    </bean>
    
    <!-- Prototype scope - une nouvelle instance à chaque injection -->
    <!-- Exemple pour démonstration -->
    <bean id="prototypeBean" 
          class="com.youcode.services.impl.FournisseurServiceImpl" 
          scope="prototype">
        <constructor-arg ref="fournisseurRepository"/>
    </bean>

</beans>
